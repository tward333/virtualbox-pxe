#!ipxe

menu Utilities - Image Sig Checks: [${img_sigs_enabled}]
item --gap Utilities:
item avg ${space} AVG Rescue CD
item breakin ${space} Breakin
item clonezilla ${space} Clonezilla
item dban ${space} DBAN
item gparted ${space} GParted
item memtest ${space} Memtest
item supergrub ${space} SuperGRUB
item ubcd ${space} Ultimate Boot CD (UBCD)
item --gap netboot.xyz tools:
item nbxyz-custom ${space} Set Github username [user: ${github_user}]
item testdistro ${space} Test Distribution ISO
item testpr ${space} Test forked netboot.xyz branch or hash
choose --default ${menu} menu || goto utils_exit
echo ${cls}
goto ${menu} ||
chain ${menu}.ipxe || goto utils_exit
goto utils_exit

:avg
set util_path http://download.avg.com/filedir/inst/avg_arl_cdi_all_120_160420a12074.iso
set util_file avg_arl_cdi_all_120_160420a12074.iso
set util_version 160420a12074
goto boot_memdisk
:breakin
set util_path http://www.advancedclustering.com/wp-content/uploads/2017/02/bootimage-4.26.1-53.iso
set util_file bootimage-4.26.1-53.iso
set util_version 4.26.1-53
goto boot_memdisk
:clonezilla
set util_path http://master.dl.sourceforge.net/project/clonezilla/clonezilla_live_stable/2.6.4-10/clonezilla-live-2.6.4-10-amd64.iso
set util_file clonezilla-live-2.6.4-10-amd64.iso
set util_version 2.6.4-10
goto boot_memdisk
:dban
set util_path http://master.dl.sourceforge.net/project/dban/dban/dban-2.3.0/dban-2.3.0_i586.iso
set util_file dban-2.3.0_i586.iso
set util_version 2.3.0
goto boot_memdisk
:gparted
set util_path http://master.dl.sourceforge.net/project/gparted/gparted-live-stable/1.0.0-3/gparted-live-1.0.0-3-amd64.iso
set util_file gparted-live-1.0.0-3-amd64.iso
set util_version 1.0.0-3
goto boot_memdisk
:memtest
set util_path https://boot.netboot.xyz/utils/memtest86-5.01.0
set util_file memtest86-5.01.0
set util_version 5.01.0
goto boot_memtest
:supergrub
set util_path http://master.dl.sourceforge.net/project/supergrub2/2.04s1/super_grub2_disk_2.04s1/super_grub2_disk_hybrid_2.04s1.iso
set util_file super_grub2_disk_hybrid_2.04s1.iso
set util_version 2.04s1
goto boot_memdisk
:ubcd
set util_path http://mirror.sysadminguide.net/ubcd/ubcd538.iso
set util_file ubcd538.iso
set util_version 538
goto boot_memdisk

:boot_memdisk
imgfree
kernel ${memdisk} iso raw
initrd --name ${util_file} ${util_path}
echo
echo MD5sums:
md5sum memdisk ${util_file}
iseq ${img_sigs_enabled} true && goto verify_sigs || goto skip_sigs
:verify_sigs
echo
echo Checking signatures...
imgverify memdisk ${sigs}memdisk.sig || goto error
imgverify ${util_file} ${sigs}${menu}/${util_file}.sig || goto error
echo Signatures verified!
echo
:skip_sigs
boot
goto utils_exit

:boot_memtest
chain https://${util_path} && goto main_menu ||
goto utils_exit

:nbxyz-custom
echo EXPERIMENTAL
echo 
echo Make sure you have a fork of https://github.com/netbootxyz/netboot.xyz-custom.
echo You can then customize your fork as needed and set up your own custom options.
echo Once your username is set, a custom option will appear on the main menu.
echo
echo -n Please enter your Github username: ${} && read github_user
goto utils_exit 

:testdistro
echo This option will allow you to test booting an ISO using memdisk. Please
echo specify the URL of the ISO you want to test and it will automatically
echo attempt to load the ISO using memdisk.
echo -n URL: ${} && read distro_iso
kernel ${memdisk} iso raw
initrd ${distro_iso}
boot
goto utils_exit

:testpr
clear github_user
clear github_branch_or_hash
echo This will chainload into a testing branch of netboot.xyz. You'll need to enter
echo your Github username and the first part of the commit hash of the commit you want
echo to test or the branch name. This assumes you are testing from a forked netboot.xyz
echo repo.
echo
echo -n Specify Github username: ${} && read github_user
echo -n Specify Github branch name or commit hash ( i.e. my_feature or 30b7ca ): ${} && read github_branch_or_hash
echo
echo Attempting to chainload branch or hash:
chain --autofree https://raw.githubusercontent.com/${github_user}/netboot.xyz/${github_branch_or_hash}/src/menu.ipxe || echo Unable to find Github branch or hash... && sleep 5 && goto utils_exit
goto utils_exit

:utils_exit
clear menu
exit 0
